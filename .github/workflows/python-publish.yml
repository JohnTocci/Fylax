# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release-build:
    name: Build release distributions üì¶
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build dependencies
        run: python -m pip install build
        working-directory: .

      - name: Build distributions
        run: python -m build
        working-directory: .

      - name: Upload distributions as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    name: Publish to PyPI üöÄ
    runs-on: ubuntu-latest
    needs:
      - release-build # This job runs only after the build job is successful
    permissions:
      # This permission is mandatory for trusted publishing
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/project/fylax/ # Replace with your project name

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      # This is the crucial debugging step. It will show you exactly what
      # files are in the 'dist' directory before attempting to publish.
      - name: üßê Inspect the dist/ directory
        run: ls -R dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # The 'packages-dir' input is not needed here because 'dist/' is the default.
